// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã (–æ–±—ä–µ–∫—Ç ymaps –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–∫–æ—É–ø —á–µ—Ä–µ–∑ —Ç–µ–≥ <script> –≤ html-—Ñ–∞–π–ª–µ)
function initMap(mapCenterCoords, event, closeButton) {

	// console.log("üöÄ / event", event)

	ymaps.ready(init);

	function init() {
		// —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞—Ä—Ç—ã
		const map = new ymaps.Map(
			'map',
			// –≤—ã–±–∏—Ä–∞–µ–º —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã –∏ zoom –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –≤ –æ–±—ä–µ–∫—Ç–µ —Å–æ–±—ã—Ç–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
			event.coordinates ?
			{				
				center: event.coordinates.split(", "),
				zoom: 14,
			} :
			{
				center: mapCenterCoords,
				zoom: 8,
			},
			{
				searchControlProvider: 'yandex#search',
			}
		);
		// –µ—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ —Å–æ–±—ã—Ç–∏—è –∏–º–µ—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, —Ç–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–∞ –±–µ—Ä—ë–º –∏—Ö, –µ—Å–ª–∏ –Ω–µ—Ç - –±–µ—Ä–µ–º –∞–¥—Ä–µ—Å
		if (event.coordinates) {
			// console.log('üöÄ ~ file: map.js ~ line 21 ~ init ~ event.coordinates', event.coordinates);
			// –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
			map.geoObjects.add(
				new ymaps.Placemark(
					event.coordinates.split(", "),
					{
						balloonContent: `–ú–æ–±–∏–ª—å–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞: ${event.address}`,
					},
					{
						preset: 'islands#redMedicalIcon',
						iconColor: 'red',
					}
				)
			);
		} else if (event.address) {
			// console.log('üöÄ ~ file: map.js ~ line 35 ~ init ~ event.addres', event.address);
			// –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –∞–¥—Ä–µ—Å—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
			ymaps
				.geocode(
					event.address,
					// –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/geocode.xml)
					{
						results: 1, // –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
					}
				)
				.then(
					function (res) {
						// –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–∞ –ø–æ –∞–¥—Ä–µ—Å—É
						const geoPoint = res.geoObjects.get(0);
						// –µ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
						const geoPointCoords = geoPoint.geometry.getCoordinates();
						// –∑–∞–¥–∞–µ–º –ø—Ä–µ—Å–µ—Ç –¥–ª—è –∏–∫–æ–Ω–∫–∏ –æ–±—ä–µ–∫—Ç–∞
						geoPoint.options.set('preset', 'islands#redMedicalIcon');
						// –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –≤ –∏–∫–æ–Ω–∫–µ –≥–µ–æ–æ–±—ä–µ–∫—Ç–∞
						geoPoint.properties.set('iconCaption', `–ú–æ–±–∏–ª—å–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞`);
						// –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –Ω–∞ –∫–∞—Ä—Ç—É
						map.geoObjects.add(geoPoint);
					},
					function (err) {
						// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
						console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ –∞–¥—Ä–µ—Å—É –æ–±—ä–µ–∫—Ç–∞', err);
					}
				);
		}

		// —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–ø–∞–ø–∞		
		function setEventListeners () {			
      closeButton.addEventListener('click', handleMouseClose);
      document.addEventListener('keydown', handleEscClose);
    };

    function removeEventListeners () {
      closeButton.removeEventListener('click', handleMouseClose);
      document.removeEventListener('keydown', handleEscClose);
    };
		
		function handleMouseClose () {
			removeMapAndListeners();
		}
		
		function handleEscClose (evt) {
			if (evt.key === 'Escape') {
				removeMapAndListeners();
      }
		}
		
		function removeMapAndListeners () {
			map.destroy();
      removeEventListeners();
		}
		
		setEventListeners();				
	}
}

export { initMap };
